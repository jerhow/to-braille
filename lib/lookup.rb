module Lookup
  def initialize_lookup_hash
    
    # Purpose: Recreate this hash with symbols for keys and return it to the caller
    
      with_string_keys = {
        " " => "&nbsp;",
        "+" => "&nbsp;",
        "a" => "&#10241;",
        "b" => "&#10243;",
        "c" => "&#10249;",
        "d" => "&#10265;",
        "e" => "&#10257;",
        "f" => "&#10251;",
        "g" => "&#10267;",
        "h" => "&#10259;",
        "i" => "&#10250;",
        "j" => "&#10266;",
        "k" => "&#10245;",
        "l" => "&#10247;",
        "m" => "&#10253;",
        "n" => "&#10269;",
        "o" => "&#10261;",
        "p" => "&#10255;",
        "q" => "&#10271;",
        "r" => "&#10263;",
        "s" => "&#10254;",
        "t" => "&#10270;",
        "u" => "&#10277;",
        "v" => "&#10279;",
        "w" => "&#10298;",
        "x" => "&#10285;",
        "y" => "&#10301;",
        "z" => "&#10293;",
        "1" => "&#10300;&#10241;",
        "2" => "&#10300;&#10243;",
        "3" => "&#10300;&#10249;",
        "4" => "&#10300;&#10265;",
        "5" => "&#10300;&#10257;",
        "6" => "&#10300;&#10251;",
        "7" => "&#10300;&#10267;",
        "8" => "&#10300;&#10259;",
        "9" => "&#10300;&#10250;",
        "0" => "&#10300;&#10266;",
        "(" => "&#10294;",
        ")" => "&#10294;",
        "," => "&#10242;",
        "!" => "&#10262;",
        "/" => "&#10252;",
        "-" => "&#10276;",
        "." => "&#10290;",
        "?" => "&#10278;",
        ";" => "&#10246;",
        "\"" => "&#10278;",
        "'" => "&#10244;",
        "$" => "&#10290;"
      }

      with_symbol_keys = {}

      with_string_keys.each do |key, val|
          with_symbol_keys[key.to_sym] = val
      end

      with_symbol_keys
    end
end
